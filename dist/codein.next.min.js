/*!
 * codein - version 0.1.2
 *
 * Made with ❤ by Steve Ottoz so@dev.so
 *
 * Copyright (c) 2017 Steve Ottoz
 */
'use strict';export default class Codein{constructor({el:a=document.querySelector('.codein-input'),mask:b=document.querySelector('.codein-input-mask'),maskChar:c=0,max:d=6,digitClass:f='digit',enter:g=()=>{},update:h=()=>{}}={}){this.el=a,this.mask=b,this.maskChar=c,this.max=~~d,this.digitClass=f,this.enter=g,this.update=h,this.init()}init(){return this._keydown=this.keydown.bind(this),this._input=this.input.bind(this),this._paste=this.paste.bind(this),this.el.addEventListener('keydown',this._keydown),this.el.addEventListener('keyup',this._input),this.el.addEventListener('input',this._input),this.el.addEventListener('paste',this._paste),this.unlock(),this.value=this.value,this.fillMask(),this}lock(){return this.el.contentEditable=!1,this.el.classList.add('locked'),this}unlock(){return this.el.contentEditable=!0,this.el.classList.remove('locked'),this}focus(){return this.el.focus(),this}keydown(a){const b=window.getSelection().getRangeAt(0),c=this.value,d=window.getSelection();if(this.clean(),0>[8,13,37,38,39,40,46].indexOf(a.keyCode)&&!a.metaKey&&!a.ctrlKey)if((47<a.keyCode&&58>a.keyCode||95<a.keyCode&&106>a.keyCode)&&!a.shiftKey&&('Range'===d.type&&d.baseNode.parentNode.classList.contains(this.digitClass)||c.length<this.max)){const f=a.key||a.char;b.deleteContents(),this.tokenize(f,b),a.preventDefault()}else return a.preventDefault(),!1;13===a.keyCode&&(a.preventDefault(),this.enter(this)),this.update(this),this.fillMask()}input(a){this.update(this),this.fillMask()}paste(a){const b=(a.clipboardData||window.clipboardData).getData('text').replace(/[^0-9]/g,''),c=b.split(''),d=window.getSelection().getRangeAt(0);d.deleteContents();const f=this.value.length,g=Math.max(this.max-f,0);return c.splice(g),this.tokenize(c,d),this.update(this),this.fillMask(),a.preventDefault(),!1}fillMask(){if(this.mask){const a=this.value.split(''),b=a.length;let c=' '.repeat(b)+'0'.repeat(this.max-b);this.mask.innerHTML='',this.tokenize(c,this.mask)}return this}tokenize(a,b){if(Array.isArray(a)||(a=(''+a).split('')),a.length){const c=b instanceof Range,d=b instanceof Node;let g,f=c?b.startContainer.parentNode:document.createElement('span');for(let h of a)g=document.createElement('span'),g.className=this.digitClass,g.textContent=h,c?(f.className===this.digitClass?''===f.textContent?f.parentNode.replaceChild(g,f):insertAfter(g,f):b.insertNode(g),f=g):d&&b.appendChild(g);this.clean(),c&&b.setStartAfter(g)}}clean(){const a=[].slice.call(this.el.children,0);for(let b=0;b<a.length;b++)(''===a[b].textContent||b>=this.max)&&a[b].parentNode.removeChild(a[b]);return this}set value(a){const b=(''+a).replace(/[^0-9]/g,''),c=b.substr(0,this.max).split('');this.reset(),this.tokenize(c,this.el),this.clean(),this.update(this),this.fillMask()}get value(){return this.el.textContent}reset(){return this.el.innerHTML='',this.update(this),this.fillMask(),this}destroy(){return this.el.removeEventListener('keydown',this._keydown),this.el.removeEventListener('keyup',this._input),this.el.removeEventListener('input',this._input),this.el.removeEventListener('paste',this._paste),this.el.textContent=this.el.textContent,this.el.contentEditable=!1,this.mask.textContent='',this}}export function insertAfter(a,b){const c=b.parentNode;c.lastChild===b?c.appendChild(a):c.insertBefore(a,b.nextSibling)}